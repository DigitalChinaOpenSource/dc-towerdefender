'use strict';var LEVEL=0;
const MAP_HEIGHT=650,MAP_WIDTH=1500,CELL_WIDTH=50,TOTAL_LEVEL=5,START_X=0,START_Y=300,END_X=1450,END_Y=300,MAP_X=MAP_WIDTH/CELL_WIDTH,MAP_Y=MAP_HEIGHT/CELL_WIDTH,ENEMY_BASE_NUMBER=10,ENEMY_UP_NUMBER=5,ENEMY_BASE_HP=10,ENEMY_UP_HP=10,ENEMY_BASE_SPEED=3,ENEMY_MAX_SPEED=.5,ENEMY_UP_SPEED=.5,ENEMY_BASE_INTERVAL=6,ENEMY_UP_INTERVAL=1,TOWER_BASE_RAN=1,TOWER_BASE_SPEED=1,TOWER_BASE_NUMBER=50,TOWER_BASE_INTERVA=2,TOWER_UP_NUMBER=5,TOWER_UP_RAN=.2,TOWER_UP_INTERVA=.2,BULLET_BASE_ATK=100,BULLET_BASE_SPEED=
2,BULLET_UP_ATK=.2,BULLET_UP_SPEED=.2,BULLET_BASE_COLOR="#4DFFFF",MAP_ARR=[],PlAYER_BASE_MONEY=200,END_HP=100;var TIMEOUT=10;class Xx{constructor(a,b){this.x=a;this.y=b}}
class Bullet{constructor(a,b,c,d,e,g,f,h){this.x=a;this.y=b;this.target_x=c;this.target_y=d;this.atk=h||BULLET_BASE_ATK;this.speed=e||BULLET_BASE_SPEED;this.color=g||BULLET_BASE_COLOR;this.size=f||5;this._init();this.flag=0}_init(){this.create()}create(){this.direction=[];this.direction[0]=(this.target_x-this.x)/CELL_WIDTH;this.direction[1]=(this.target_y-this.y)/CELL_WIDTH;this.x+=CELL_WIDTH/2;this.y+=CELL_WIDTH/2;this.target_x+=CELL_WIDTH/2;this.target_y+=CELL_WIDTH/2;this.life=setInterval(()=>
{this.move()},100/this.speed)}move(){0==this.flag&&(this.x+=CELL_WIDTH*this.direction[0]/100,this.y+=CELL_WIDTH*this.direction[1]/100)}dead(){clearInterval(this.life)}stop(){this.flag=1}continue(){this.flag=0}}
class Enemy{constructor(a,b,c,d,e,g){this.flag=0;this.hp=a||ENEMY_BASE_HP;this.speed=b||ENEMY_BASE_SPEED;this.size=c||50;this.enemy_img=d||"img/TowerDefense.png";this.money=e;this.kill_blood=g;this._init();this.moveArr=(new search).searchEnemyRoute(LEVEL);this.index=1;this.originHp=a}_init(){this.create();this.life=setInterval(()=>{this.move()},1E4/this.speed)}create(){this.x=START_X+CELL_WIDTH;this.y=START_Y}move(){if(0==this.flag)if(this.x!=this.moveArr[this.index].x*CELL_WIDTH){var a=this.moveArr[this.index].x-
this.moveArr[this.index-1].x;this.x+=a/Math.abs(a)}else this.y!=this.moveArr[this.index].y*CELL_WIDTH?(a=this.moveArr[this.index].y-this.moveArr[this.index-1].y,this.y+=a/Math.abs(a)):this.index<this.moveArr.length?this.index++:this.index=1}dead(){clearInterval(this.life)}stop(){this.flag=1}continue(){this.flag=0}}
class EnemyFactory{constructor(a){this.level=a;this.enemyPool=[];this.init()}init(){5>this.level?this.createEnemyPool(enemyOfLevel[this.level]):this.createEnemyPool(enemyOfLevel[4])}createEnemyPool(a){for(var b=0;b<a.length;b++)for(var c=0;c<a[b].num;c++)this.enemyPool.push(a[b].enemyType)}}
var EnemyType={DesertMob:[22,500,50,"img/1.png",10,15],DesertRaider:[22,1E3,50,"img/2.png",20,15],DesertDog:[300,700,50,"img/3.png",150,15],GiantWasp:[9,1500,50,"img/5.png",30,50],DesertGhost:[550,700,50,"img/6.png",300,35],DesertPig:[31,1E3,50,"img/7.png",20,15],DesertPander:[50,2E3,50,"img/8.png",50,50],DesertSpider:[600,700,50,"img/9.png",200,100],DesertBoss:[600,700,50,"img/10.png",300,100],DesertBossKing:[1E3,700,50,"img/11.png",1E3,100]},BulletType={one:{type:1,speed:800,color:"pink",size:5,
attack:5},two:{type:2,speed:800,color:"red",size:6,attack:8},three:{type:3,speed:900,color:"DarkOrchid",size:4,attack:12},four:{type:4,speed:800,color:"Navy",size:8,attack:19},five:{type:5,speed:900,color:"Cyan",size:9,attack:27},six:{type:6,speed:800,color:"DimGray",size:10,attack:35}},TowerType={one:{type:1,range:3,tower_img:"img/tower1.png",bullet_type:BulletType.one,cost:50,sale:30},two:{type:2,range:4,tower_img:"img/t2.png",bullet_type:BulletType.two,cost:80,sale:40},three:{type:3,range:5,tower_img:"img/t3.png",
bullet_type:BulletType.three,cost:100,sale:50},four:{type:4,range:6,tower_img:"img/t4.png",bullet_type:BulletType.four,cost:150,sale:60},five:{type:5,range:8,tower_img:"img/t5.png",bullet_type:BulletType.five,cost:200,sale:70},six:{type:6,range:10,tower_img:"img/t6.png",bullet_type:BulletType.six,cost:300,sale:80}},enemyOfLevel=[[{enemyType:EnemyType.DesertMob,num:10},{enemyType:EnemyType.DesertRaider,num:10},{enemyType:EnemyType.DesertMob,num:10},{enemyType:EnemyType.DesertRaider,num:10},{enemyType:EnemyType.DesertDog,
num:3}],[{enemyType:EnemyType.DesertPander,num:5},{enemyType:EnemyType.DesertRaider,num:5},{enemyType:EnemyType.GiantWasp,num:10},{enemyType:EnemyType.DesertPander,num:5},{enemyType:EnemyType.DesertRaider,num:5},{enemyType:EnemyType.GiantWasp,num:10},{enemyType:EnemyType.DesertDog,num:5},{enemyType:EnemyType.DesertGhost,num:3}],[{enemyType:EnemyType.DesertPig,num:10},{enemyType:EnemyType.DesertPander,num:10},{enemyType:EnemyType.DesertPig,num:10},{enemyType:EnemyType.DesertPander,num:10},{enemyType:EnemyType.DesertDog,
num:5},{enemyType:EnemyType.DesertGhost,num:5},{enemyType:EnemyType.DesertSpider,num:2}],[{enemyType:EnemyType.DesertMob,num:5},{enemyType:EnemyType.DesertRaider,num:5},{enemyType:EnemyType.DesertSpider,num:3},{enemyType:EnemyType.DesertPander,num:5},{enemyType:EnemyType.DesertRaider,num:5},{enemyType:EnemyType.GiantWasp,num:8},{enemyType:EnemyType.DesertBossKing,num:2},{enemyType:EnemyType.DesertMob,num:1},{enemyType:EnemyType.DesertRaider,num:1},{enemyType:EnemyType.DesertDog,num:1},{enemyType:EnemyType.DesertPander,
num:5},{enemyType:EnemyType.DesertRaider,num:5},{enemyType:EnemyType.GiantWasp,num:1},{enemyType:EnemyType.DesertGhost,num:1},{enemyType:EnemyType.DesertPig,num:1},{enemyType:EnemyType.DesertPander,num:1},{enemyType:EnemyType.DesertSpider,num:1},{enemyType:EnemyType.DesertBoss,num:1},{enemyType:EnemyType.DesertDog,num:5},{enemyType:EnemyType.DesertBossKing,num:5}],[{enemyType:EnemyType.GiantWasp,num:20},{enemyType:EnemyType.DesertGhost,num:20},{enemyType:EnemyType.DesertPig,num:20},{enemyType:EnemyType.DesertPander,
num:20},{enemyType:EnemyType.DesertSpider,num:20},{enemyType:EnemyType.DesertBoss,num:20},{enemyType:EnemyType.DesertBossKing,num:20}]];class Tower{constructor(a,b,c){this.x=a;this.y=b;this.bullet=0;this.type=c||{};this.range=this.type.range||2;this.tower_img=this.type.tower_img||"img/tower1.png";this.cost=this.type.cost;this.sale=this.type.sale}}
class TowerAndBulletFactory{constructor(){this.TowerAndBulletArr=[];this.factory()}factory(){0==LEVEL&&(this.TowerAndBulletArr.push(TowerType.one),this.TowerAndBulletArr.push(TowerType.two),this.TowerAndBulletArr.push(TowerType.three),this.TowerAndBulletArr.push(TowerType.four),this.TowerAndBulletArr.push(TowerType.five),this.TowerAndBulletArr.push(TowerType.six));1==LEVEL&&(this.TowerAndBulletArr.push(TowerType.one),this.TowerAndBulletArr.push(TowerType.two),this.TowerAndBulletArr.push(TowerType.three),
this.TowerAndBulletArr.push(TowerType.four),this.TowerAndBulletArr.push(TowerType.five),this.TowerAndBulletArr.push(TowerType.six));2==LEVEL&&(this.TowerAndBulletArr.push(TowerType.one),this.TowerAndBulletArr.push(TowerType.two),this.TowerAndBulletArr.push(TowerType.three),this.TowerAndBulletArr.push(TowerType.four),this.TowerAndBulletArr.push(TowerType.five),this.TowerAndBulletArr.push(TowerType.six));2<LEVEL&&(this.TowerAndBulletArr.push(TowerType.one),this.TowerAndBulletArr.push(TowerType.two),
this.TowerAndBulletArr.push(TowerType.three),this.TowerAndBulletArr.push(TowerType.four),this.TowerAndBulletArr.push(TowerType.five),this.TowerAndBulletArr.push(TowerType.six))}}
var Ca={fillRect:function(a,b,c,d,e,g){a.fillStyle=g;a.fillRect(b,c,d,e)},drawWall:function(a,b,c){a.fillStyle=c;for(c=0;c<b.length;c++)a.fillRect((b[c].x-1)*CELL_WIDTH,(b[c].y-1)*CELL_WIDTH,CELL_WIDTH,CELL_WIDTH)},drawBlood:function(a,b){let c=b.hp/b.originHp;this.fillRect(a,b.x+5,b.y-5,40,5,"red");this.fillRect(a,b.x+5,b.y-5,40*c,5,"green")}};class TowerOption{constructor(a,b){this.x=a;this.y=b}}class Player{constructor(){this.money=PlAYER_BASE_MONEY+100*LEVEL;this.end_hp=END_HP}}$(function(){new Game});
class search{constructor(){}searchTower(a){switch(a){case 0:return TowerHome.towerHomeOne;case 1:return TowerHome.towerHomeTwo;case 2:return TowerHome.towerHomeThree;case 3:return TowerHome.towerHomeFour;default:return TowerHome.towerHomeOne}}searchEnemyRoute(a){switch(a){case 0:return moveRoute.MOVEARROne;case 1:return moveRoute.MOVEARRTwo;case 2:return moveRoute.MOVEARRThree;case 3:return moveRoute.MOVEARRFour;default:return moveRoute.MOVEARROne}}DrawEnemyRoad(a){var b=document.querySelector("#canvasMap_backgroud").getContext("2d");
switch(a){case 0:Ca.drawWall(b,route.routeOne,"DarkGray");break;case 1:Ca.drawWall(b,route.routeTwo,"DarkGray");break;case 2:Ca.drawWall(b,route.routeThree,"DarkGray");break;case 3:Ca.drawWall(b,route.routeFour,"DarkGray");break;default:Ca.drawWall(b,route.routeOne,"DarkGray")}}DrawTowerPlace(a){var b=document.querySelector("#canvasMap_backgroud").getContext("2d");switch(a){case 0:Ca.drawWall(b,TowerHome.towerHomeOne,"goldenrod");break;case 1:Ca.drawWall(b,TowerHome.towerHomeTwo,"orange");break;case 2:Ca.drawWall(b,
TowerHome.towerHomeThree,"orange");break;case 3:Ca.drawWall(b,TowerHome.towerHomeFour,"orange");break;default:Ca.drawWall(b,TowerHome.towerHomeOne,"goldenrod")}}DrawBackground(a){var b=document.querySelector("#canvasMap_backgroud").getContext("2d"),c=new Image;c.onload=function(){b.drawImage(c,0,0,1500,650,0,0,1500,650)};switch(a){case 0:c.src="img/first_background.png";break;case 1:c.src="img/second_background.png";break;case 2:c.src="img/third_background.png";break;case 3:c.src="img/fourth_background.png";
break;default:c.src="img/first_background.png"}}}
class Game{constructor(){document.addEventListener("visibilitychange",function(){alert("\u4f60\u521a\u521a\u79bb\u5f00\u4e86\u6e38\u620f,\u73b0\u5728\u6e38\u620f\u7ee7\u7eed")});$("#explain").show();$("#explainTwo").show();$("#menu").show();$("#nextScale").hide();this._init();this.stopGame();$("#startButton").on("click",()=>{$("#start").hide();$("#stop").show();this.continueGame()});$("#restartButton,#restartButton1").on("click",()=>{$("#end").hide();$("#stops").hide();$("#nextScale").hide();clearInterval(this.createEnemies);
clearInterval(this.createBullets);this._init()});$("#nextButton").on("click",()=>{LEVEL++;$("#next").hide();$("#nextScale").hide();clearInterval(this.createEnemies);clearInterval(this.createBullets);this._init()});$("#successButton").on("click",()=>{$("#success").hide();$("#award").show()});$("#nextScale").on("click",()=>{this.missionEnemy=0;this.player.money+=30;this.createEnemies=setInterval(()=>{0==this.flag&&this.createScale()},100*(ENEMY_BASE_INTERVAL-ENEMY_UP_INTERVAL*LEVEL));$("#nextScale").hide()});
$("#close_explains").on("click",()=>{$("#explains").hide()});$("#explains_button").on("click",()=>{$("#explains").show()})}_init(){this.towerAndBullets=(new TowerAndBulletFactory).TowerAndBulletArr;this.player=new Player;this.drawMap();this.enemyData=JSON.parse(JSON.stringify((new EnemyFactory(LEVEL)).enemyPool));this.enemyNumber=0;this.enemyExisted=this.enemyData.length;this.optionsNumber=this.towersNumber=0;this.towers=[];this.bullets=[];this.end_hp=5;this.missionEnemy=0;this.mission=1;this.options=
[];(new Image).src="img/tower1.png";for(var a=2;7>a;a++)(new Image).src="img/t"+a+".png";$("#canvasMap_option").on("click",c=>{var d=parseInt(c.offsetX/CELL_WIDTH),e=parseInt(c.offsetY/CELL_WIDTH);this.downTower(d,e);this.chooseTower(d,e,c,this.towerAndBullets)});for(a=0;a<MAP_X;a++){MAP_ARR[a]=[];for(var b=0;b<MAP_Y;b++)MAP_ARR[a][b]=0}this.startGame()}createScale(){0>=this.enemyExisted||10<=this.missionEnemy?($("#nextScale").show(),clearInterval(this.createEnemies),this.missionEnemy=0,this.mission++,
setTimeout(()=>{this.createEnemies=setInterval(()=>{0==this.flag&&this.createScale()},100*(ENEMY_BASE_INTERVAL-ENEMY_UP_INTERVAL*LEVEL))},15E6)):this.createEnemy()}startGame(){this.xx=[];this.enemies=[];this.flag=0;this.createEnemies=setInterval(()=>{0==this.flag&&this.createScale()},100*(ENEMY_BASE_INTERVAL-ENEMY_UP_INTERVAL*LEVEL)*TIMEOUT);$("#stop").on("click",()=>{this.stopGame();$("#stops").show()});$("#continue").on("click",()=>{this.continueGame();$("#stops").hide()});$("#movegame").on("click",
()=>{LEVEL=0;$("#nextScale").hide();$("#stops").hide();$("#start").show();this._init();this.stopGame()});this.createBullets=setInterval(()=>{0==this.flag&&this.checkAndCreateBullets()},1E3*(TOWER_BASE_INTERVA-LEVEL*TOWER_UP_INTERVA));setInterval(()=>{$("#moneyshow").html(this.player.money)},100);setInterval(()=>{$("#lifeshow").html(this.player.end_hp)},100);setInterval(()=>{$("#enemysshow").html(this.enemyExisted)});this.drawBackgound();setInterval(()=>{this.gameState()},10);setInterval(()=>{this.drawEnemies()},
10);setInterval(()=>{this.drawTowers()},100);setInterval(()=>{this.drawBullet()},10)}nextGame(){this.enemyNumber=0;this.createEnemies=setInterval(()=>{0==this.flag&&this.createScale()},100*(ENEMY_BASE_INTERVAL-ENEMY_UP_INTERVAL*LEVEL)*TIMEOUT)}createEnemy(){if(this.enemyNumber<=this.enemyData.length-1){var a=new Enemy(this.enemyData[this.enemyNumber][0],this.enemyData[this.enemyNumber][1],this.enemyData[this.enemyNumber][2],this.enemyData[this.enemyNumber][3],this.enemyData[this.enemyNumber][4],this.enemyData[this.enemyNumber][5]);
this.enemies.push(a);this.enemyNumber++}this.missionEnemy++}checkAndCreateBullets(){if(0>=this.towersNumber)return!1;for(var a in this.towers)for(var b in this.enemies){var c=this.towers[a].y-this.enemies[b].y;if(Math.abs(this.towers[a].x-this.enemies[b].x)<=this.towers[a].range*CELL_WIDTH&&Math.abs(c)<=this.towers[a].range*CELL_WIDTH){this.bullets.push(new Bullet(this.towers[a].x,this.towers[a].y,this.enemies[b].x,this.enemies[b].y,this.towers[a].type.bullet_type.speed,this.towers[a].type.bullet_type.color,
this.towers[a].type.bullet_type.size,this.towers[a].type.bullet_type.attack));break}}}stopGame(){this.stopProdue();this.stopEnemies();this.stopBullets()}stopProdue(){this.flag=1}stopBullets(){for(var a in this.bullets)this.bullets[a].stop()}stopEnemies(){for(var a in this.enemies)this.enemies[a].stop()}continueGame(){this.continueProduce();this.continueEnemies();this.continueBulletss()}continueProduce(){this.flag=0}continueEnemies(){for(var a in this.enemies)this.enemies[a].continue()}continueBulletss(){for(var a in this.bullets)this.bullets[a].continue()}chooseTower(a,
b,c,d){var e=0;if(0<this.options.length||1==MAP_ARR[a][b]){var g=parseInt(this.towerAndBullets.length/2),f;for(f in this.options){for(var h=0;h<this.towerAndBullets.length;h++)this.options[f].x-(g-h)*CELL_WIDTH<=c.offsetX&&c.offsetX<this.options[f].x-(g-h-1)*CELL_WIDTH&&this.options[f].y-CELL_WIDTH<=c.offsetY&&c.offsetY<this.options[f].y&&(this.createTower(this.options[f].x/CELL_WIDTH,this.options[f].y/CELL_WIDTH,d[h]),e=1,this.drawss());0==e&&(this.options.splice(f,1),this.drawss(),this.createOption(a,
b),1<this.options.length&&this.options.splice(f,1))}}else{this.drawss();for(g in this.xx)this.xx.splice(g,1);this.createOption(a,b)}}downTower(a,b){if(0<this.xx.length)for(var c in this.towers)for(var d in this.xx)this.towers[c].x==(a-1)*CELL_WIDTH&&this.towers[c].y==(b+1)*CELL_WIDTH&&(this.player.money+=this.towers[c].type.sale,this.towers.splice(c,1),this.xx.splice(d,1),MAP_ARR[a-1][b+1]=0,this.drawTowerMap(),this.drawss());1==MAP_ARR[a][b]&&(this.drawss(),this.xx.push(new Xx(a,b)),1<this.xx.length&&
this.xx.splice(d,1),this.drawxx())}createOption(a,b){this.towerHome=(new search).searchTower(LEVEL);for(var c in this.towerHome)a==this.towerHome[c].x-1&&b==this.towerHome[c].y-1&&1!=MAP_ARR[a][b]&&this.towersNumber<TOWER_BASE_NUMBER+TOWER_UP_NUMBER*LEVEL&&(this.optionsNumber++,this.options.push(new TowerOption(a*CELL_WIDTH,b*CELL_WIDTH)),this.drawOptions())}createTower(a,b,c){this.towerHome=(new search).searchTower(LEVEL);for(var d in this.towerHome)a==this.towerHome[d].x-1&&b==this.towerHome[d].y-
1&&1!=MAP_ARR[a][b]&&this.towersNumber<TOWER_BASE_NUMBER+TOWER_UP_NUMBER*LEVEL&&(this.towersNumber++,0>=c.cost-this.player.money?(this.towers.push(new Tower(a*CELL_WIDTH,b*CELL_WIDTH,c)),this.player.money-=c.cost,MAP_ARR[a][b]=1):($("#moneyshow").css("border","2px solid red"),setTimeout(()=>{$("#moneyshow").css("border"," white")},500)))}roadIsBlocked(a,b){MAP_ARR[a][b]=1;if(0<searchRoad(START_X/CELL_WIDTH,START_Y/CELL_WIDTH,END_X/CELL_WIDTH,END_Y/CELL_WIDTH).length)return MAP_ARR[a][b]=0,!1;MAP_ARR[a][b]=
0;return!0}haveEnemy(a,b){for(var c in this.enemies)if(this.enemies[c].x==a&&this.enemies[c].y==b)return!0;return!1}gameState(){1>this.enemyExisted&&$("#nextScale").hide();this.enemyNumber>=this.enemyData.length&&clearInterval(this.createEnemies);0>=this.enemyExisted&&this.endGame("Success");for(var a in this.enemies)if(0>=this.player.end_hp){this.endGame("Failed");break}else this.enemies[a].x==END_X&&this.enemies[a].y==END_Y&&(this.player.end_hp-=this.enemies[a].kill_blood,this.enemies[a].dead(),
this.enemies[a]=null,this.enemies.splice(a,1),this.enemyExisted--);for(var b in this.bullets){if(0>this.bullets[b].x||0>this.bullets[b].y||this.bullets[b].x>MAP_WIDTH||this.bullets[b].y>MAP_HEIGHT){this.bullets[b].dead();this.bullets[b]=null;this.bullets.splice(b,1);break}for(a in this.enemies){var c=this.bullets[b].x-this.enemies[a].x,d=this.bullets[b].y-this.enemies[a].y;if(0<c&&c<CELL_WIDTH&&0<d&&d<CELL_WIDTH){this.enemies[a].hp-=this.bullets[b].atk;this.bullets[b].dead();this.bullets[b]=null;
this.bullets.splice(b,1);0>=this.enemies[a].hp&&(this.player.money+=this.enemies[a].money,this.enemies[a].dead(),this.enemies[a]=null,this.enemies.splice(a,1),this.enemyExisted--);break}}}}endGame(a){"Failed"==a?(this.flag=1,this.stopGame(),$("#end").show()):3<=LEVEL?$("#success").show():$("#next").show()}drawMap(){var a=document.querySelector("#canvasMap_backgroud");a.setAttribute("height",MAP_HEIGHT);a.setAttribute("width",MAP_WIDTH);a.setAttribute("z-index",1);a=document.querySelector("#canvasMap_enemy");
a.setAttribute("height",MAP_HEIGHT);a.setAttribute("width",MAP_WIDTH);a.setAttribute("z-index",2);this.drawTowerMap();a=document.querySelector("#canvasMap_bullet");a.setAttribute("height",MAP_HEIGHT);a.setAttribute("width",MAP_WIDTH);a.setAttribute("z-index",4);this.drawss()}drawss(){var a=document.querySelector("#canvasMap_option");a.setAttribute("height",MAP_HEIGHT);a.setAttribute("width",MAP_WIDTH);a.setAttribute("z-index",5)}drawTowerMap(){var a=document.querySelector("#canvasMap_tower");a.setAttribute("height",
MAP_HEIGHT);a.setAttribute("width",MAP_WIDTH);a.setAttribute("z-index",3)}drawBackgound(){var a=document.querySelector("#canvasMap_backgroud").getContext("2d");(new search).DrawBackground(LEVEL);var b=new Image;b.onload=function(){a.drawImage(b,0,0,500,300,START_X,START_Y,CELL_WIDTH,CELL_WIDTH)};b.src="img/TowerDefense.png";var c=new Image;c.onload=function(){a.drawImage(c,1E3,0,500,500,END_X,END_Y,CELL_WIDTH,CELL_WIDTH)};c.src="img/TowerDefense.png";(new search).DrawEnemyRoad(LEVEL);(new search).DrawTowerPlace(LEVEL);
a.beginPath();a.fillstyle="red";for(var d=0;d<=MAP_HEIGHT/CELL_WIDTH;d++)a.moveTo(0,d*CELL_WIDTH),a.lineTo(MAP_WIDTH,d*CELL_WIDTH);a.stroke();a.beginPath();a.fillstyle="red";for(d=0;d<=MAP_WIDTH/CELL_WIDTH;d++)a.moveTo(CELL_WIDTH*d,0),a.lineTo(CELL_WIDTH*d,MAP_HEIGHT);a.stroke()}drawEnemies(){var a=document.querySelector("#canvasMap_enemy").getContext("2d");a.clearRect(0,0,MAP_WIDTH,MAP_HEIGHT);var b=new Image,c;for(c in this.enemies)b.src=this.enemies[c].enemy_img,a.drawImage(b,this.enemies[c].x,
this.enemies[c].y,CELL_WIDTH,CELL_WIDTH),Ca.drawBlood(a,this.enemies[c])}drawTowers(){var a=document.querySelector("#canvasMap_tower").getContext("2d"),b;for(b in this.towers)for(var c=new Image,d=0;d<this.towerAndBullets.length;d++)this.towers[b].type.type==this.towerAndBullets[d].type&&(c.src=this.towerAndBullets[d].tower_img,a.drawImage(c,this.towers[b].x,this.towers[b].y,CELL_WIDTH,CELL_WIDTH))}drawOptions(){for(var a=document.querySelector("#canvasMap_option").getContext("2d"),b=parseInt(this.towerAndBullets.length/
2),c=0;c<this.towerAndBullets.length;c++){var d=new Image;d.src=this.towerAndBullets[c].tower_img;for(var e in this.options)a.drawImage(d,this.options[e].x-(b-c)*CELL_WIDTH,this.options[e].y-CELL_WIDTH,CELL_WIDTH,CELL_WIDTH)}}drawBullet(){var a=document.querySelector("#canvasMap_bullet").getContext("2d");a.clearRect(0,0,MAP_WIDTH,MAP_HEIGHT);for(var b in this.bullets)a.beginPath(),a.arc(this.bullets[b].x,this.bullets[b].y,this.bullets[b].size,0,2*Math.PI),a.fillStyle=this.bullets[b].color,a.fill(),
a.closePath()}drawxx(){var a=document.querySelector("#canvasMap_option").getContext("2d"),b=new Image;b.src="img/delete.png";for(var c in this.xx)a.drawImage(b,(this.xx[c].x+1)*CELL_WIDTH,(this.xx[c].y-1)*CELL_WIDTH,CELL_WIDTH,CELL_WIDTH)}}
var route={routeOne:[{x:1,y:7},{x:2,y:7},{x:3,y:7},{x:4,y:7},{x:5,y:7},{x:6,y:7},{x:7,y:7},{x:7,y:8},{x:7,y:9},{x:7,y:10},{x:7,y:11},{x:7,y:12},{x:7,y:13},{x:8,y:13},{x:9,y:13},{x:10,y:13},{x:11,y:13},{x:12,y:13},{x:13,y:13},{x:13,y:12},{x:13,y:11},{x:13,y:10},{x:13,y:9},{x:13,y:8},{x:13,y:7},{x:13,y:6},{x:13,y:5},{x:13,y:4},{x:13,y:3},{x:13,y:2},{x:14,y:2},{x:15,y:2},{x:16,y:2},{x:17,y:2},{x:18,y:2},{x:19,y:2},{x:20,y:2},{x:20,y:3},{x:20,y:4},{x:20,y:5},{x:20,y:6},{x:20,y:7},{x:21,y:7},{x:22,y:7},
{x:23,y:7},{x:24,y:7},{x:25,y:7},{x:26,y:7},{x:27,y:7},{x:28,y:7},{x:29,y:7},{x:30,y:7}],routeTwo:[{x:1,y:7},{x:2,y:7},{x:2,y:6},{x:2,y:5},{x:2,y:4},{x:3,y:4},{x:4,y:4},{x:5,y:4},{x:5,y:6},{x:5,y:7},{x:5,y:8},{x:6,y:4},{x:7,y:4},{x:8,y:4},{x:8,y:5},{x:8,y:6},{x:8,y:7},{x:8,y:8},{x:7,y:8},{x:6,y:8},{x:6,y:6},{x:7,y:6},{x:8,y:6},{x:9,y:6},{x:10,y:6},{x:11,y:6},{x:12,y:6},{x:13,y:6},{x:14,y:6},{x:15,y:6},{x:15,y:7},{x:15,y:8},{x:15,y:9},{x:14,y:9},{x:13,y:9},{x:12,y:9},{x:12,y:8},{x:12,y:7},{x:13,y:7},
{x:14,y:7},{x:15,y:7},{x:16,y:7},{x:17,y:7},{x:18,y:7},{x:19,y:7},{x:20,y:7},{x:21,y:7},{x:21,y:8},{x:21,y:9},{x:21,y:10},{x:20,y:10},{x:19,y:10},{x:18,y:10},{x:18,y:9},{x:18,y:8},{x:18,y:8},{x:19,y:8},{x:20,y:8},{x:21,y:8},{x:22,y:8},{x:23,y:8},{x:24,y:8},{x:25,y:8},{x:26,y:8},{x:26,y:9},{x:26,y:10},{x:26,y:11},{x:25,y:11},{x:24,y:11},{x:23,y:11},{x:23,y:10},{x:23,y:9},{x:23,y:9},{x:24,y:9},{x:25,y:9},{x:26,y:9},{x:27,y:9},{x:28,y:9},{x:28,y:8},{x:28,y:7},{x:29,y:7}],routeThree:[{x:1,y:7},{x:2,y:7},
{x:3,y:7},{x:4,y:7},{x:4,y:8},{x:4,y:9},{x:4,y:10},{x:4,y:11},{x:5,y:11},{x:6,y:11},{x:7,y:11},{x:8,y:11},{x:8,y:10},{x:8,y:9},{x:8,y:8},{x:8,y:7},{x:8,y:6},{x:8,y:5},{x:8,y:4},{x:8,y:3},{x:8,y:2},{x:7,y:2},{x:6,y:2},{x:5,y:2},{x:4,y:2},{x:4,y:3},{x:4,y:4},{x:5,y:4},{x:6,y:4},{x:7,y:4},{x:8,y:4},{x:9,y:4},{x:10,y:4},{x:11,y:4},{x:12,y:4},{x:13,y:4},{x:14,y:4},{x:15,y:4},{x:16,y:4},{x:17,y:4},{x:18,y:4},{x:19,y:4},{x:20,y:4},{x:21,y:4},{x:22,y:4},{x:23,y:4},{x:24,y:4},{x:25,y:4},{x:26,y:4},{x:27,y:4},
{x:27,y:3},{x:27,y:2},{x:26,y:2},{x:25,y:2},{x:24,y:2},{x:23,y:2},{x:22,y:2},{x:22,y:3},{x:22,y:4},{x:22,y:5},{x:22,y:6},{x:22,y:7},{x:22,y:8},{x:22,y:9},{x:22,y:10},{x:22,y:11},{x:22,y:12},{x:21,y:12},{x:20,y:12},{x:19,y:12},{x:18,y:12},{x:17,y:12},{x:16,y:12},{x:15,y:12},{x:15,y:11},{x:15,y:10},{x:15,y:9},{x:15,y:8},{x:15,y:7},{x:16,y:7},{x:17,y:7},{x:18,y:7},{x:19,y:7},{x:20,y:7},{x:21,y:7},{x:22,y:7},{x:23,y:7},{x:24,y:7},{x:25,y:7},{x:26,y:7},{x:27,y:7},{x:28,y:7},{x:29,y:7},{x:30,y:7}],routeFour:[{x:1,
y:7},{x:2,y:7},{x:3,y:7},{x:4,y:7},{x:5,y:7},{x:6,y:7},{x:7,y:7},{x:8,y:7},{x:9,y:7},{x:10,y:7},{x:11,y:7},{x:12,y:7},{x:13,y:7},{x:14,y:7},{x:15,y:7},{x:16,y:7},{x:17,y:7},{x:18,y:7},{x:19,y:7},{x:20,y:7},{x:21,y:7},{x:22,y:7},{x:23,y:7},{x:24,y:7},{x:25,y:7},{x:26,y:7},{x:27,y:7},{x:28,y:7},{x:28,y:6},{x:28,y:5},{x:28,y:4},{x:28,y:3},{x:28,y:2},{x:27,y:2},{x:26,y:2},{x:25,y:2},{x:24,y:2},{x:23,y:2},{x:22,y:2},{x:21,y:2},{x:20,y:2},{x:19,y:2},{x:18,y:2},{x:17,y:2},{x:16,y:2},{x:16,y:3},{x:16,y:4},
{x:16,y:5},{x:16,y:6},{x:16,y:7},{x:29,y:7},{x:30,y:7}]},moveRoute={MOVEARROne:[{x:0,y:6},{x:6,y:6},{x:6,y:12},{x:12,y:12},{x:12,y:1},{x:19,y:1},{x:19,y:6},{x:29,y:6},{}],MOVEARRTwo:[{x:0,y:6},{x:1,y:6},{x:1,y:3},{x:7,y:3},{x:7,y:7},{x:4,y:7},{x:4,y:5},{x:14,y:5},{x:14,y:8},{x:11,y:8},{x:11,y:6},{x:20,y:6},{x:20,y:9},{x:17,y:9},{x:17,y:7},{x:25,y:7},{x:25,y:10},{x:22,y:10},{x:22,y:8},{x:27,y:8},{x:27,y:6},{x:29,y:6},{}],MOVEARRThree:[{x:0,y:6},{x:3,y:6},{x:3,y:10},{x:7,y:10},{x:7,y:1},{x:3,y:1},{x:3,
y:3},{x:26,y:3},{x:26,y:1},{x:21,y:1},{x:21,y:11},{x:14,y:11},{x:14,y:6},{x:29,y:6},{}],MOVEARRFour:[{x:0,y:6},{x:27,y:6},{x:27,y:1},{x:15,y:1},{x:15,y:6},{x:29,y:6},{}]},TowerHome={towerHomeOne:[{x:4,y:8},{x:4,y:9},{x:6,y:6},{x:6,y:10},{x:6,y:11},{x:9,y:7},{x:9,y:8},{x:9,y:11},{x:10,y:11},{x:11,y:7},{x:11,y:8},{x:11,y:11},{x:12,y:4},{x:12,y:5},{x:14,y:11},{x:14,y:12},{x:16,y:3},{x:17,y:3},{x:18,y:3},{x:19,y:6},{x:19,y:7},{x:21,y:4},{x:21,y:5},{x:23,y:8},{x:25,y:6},{x:26,y:6},{x:28,y:8}],towerHomeTwo:[{x:6,
y:7},{x:7,y:7},{x:13,y:8},{x:14,y:8},{x:19,y:9},{x:20,y:9},{x:24,y:10},{x:25,y:10},{x:7,y:9},{x:10,y:9},{x:10,y:7},{x:10,y:5},{x:4,y:5},{x:13,y:5},{x:17,y:6},{x:17,y:8},{x:23,y:6},{x:23,y:7}],towerHomeThree:[{x:7,y:3},{x:15,y:5},{x:17,y:9},{x:20,y:10},{x:24,y:3},{x:9,y:3},{x:7,y:6},{x:7,y:7},{x:6,y:7},{x:5,y:7},{x:5,y:8},{x:9,y:7},{x:9,y:8},{x:9,y:9},{x:12,y:5},{x:12,y:3},{x:14,y:7},{x:14,y:8},{x:13,y:8},{x:13,y:7},{x:23,y:6},{x:24,y:6},{x:25,y:6}],towerHomeFour:[{x:4,y:9},{x:6,y:9},{x:7,y:5},{x:9,
y:5},{x:14,y:5},{x:13,y:9},{x:15,y:9},{x:18,y:5},{x:17,y:9},{x:22,y:10},{x:24,y:10},{x:26,y:10},{x:24,y:4}]};